# Libraries ---------------------------------------------------------------
library(dplyr)
library(forecast)
library(tseries)
library(aTSA)
# Read databases ----------------------------------------------------------
series <- readxl::read_excel('data/dados_hmw_1.xls') %>%
ts() # Tranforming in timeseries
series
# Read databases ----------------------------------------------------------
series <- readxl::read_excel('dados_hmw_1.xls') %>%
ts() # Tranforming in timeseries
# Plot series -------------------------------------------------------------
plot(series)
# Remove the trend  -------------------------------------------------------
## Serie 1  ------
serie1 = series[,1] %>%
ts()
serie1_no_trend = serie1 %>%
diff()
## Serie 2 ------
serie2 = series[,2] %>%
ts()
# Diff
serie2_no_trend = serie2 %>%
diff()
plot(serie2_no_trend)
# Removing the linear trend by linear regression
fit = lm(serie2 ~ seq(1,149))
serie2_no_trend2 = fit$residuals %>%
ts
plot(serie2_no_trend2)
## Serie 3 ------
serie3 = series[,3] %>%
ts()
# Diff
serie3_no_trend = serie3 %>%
diff()
plot(serie3_no_trend)
seq(1,149)
# Removing the linear trend by linear regression
fit = lm(serie3 ~ seq(1,149))
fit
serie3_no_trend2 = fit$residuals %>%
ts
plot(serie3_no_trend2)
## Serie 4 ------
serie4 = series[,4] %>%
ts()
# Diff
serie4_no_trend = serie4 %>%
diff()
plot(serie4_no_trend)
#' Serie 1: seems like an MA(1) process, because the acf has a positive spike at
#' lag 1, and then drops to 0.The pacf exhibits an oscillating decay
acf(serie1_no_trend)
pacf(serie1_no_trend)
acf(serie1)
pacf(serie1)
#' Serie 2 without trend: seems like an ARMA(1,1) process, because the acf has a
#' decays after lag q = 2, and the pacf exhibits an oscillating decay
acf(serie2_no_trend)
pacf(serie2_no_trend)
mod1 = arima(serie1, order = c(1,0,1)) # Model choosed by me
acf(serie1)
pacf(serie1)
mod1_r <- auto.arima(serie1) # Model by auto arima
mod1_r
mod1
mod1 = Arima(serie1, order = c(1,0,1)) # Model choosed by me
mod1
checkresiduals(mod1)
checkresiduals(mod1_r)
Box.test(residuals(mod1), type="Ljung-Box")
jarque.bera.test(x = mod1$residuals)
jarque.bera.test(mod1_r$residuals)
arch.test(mod1) # there is heteroscedaticity in order <=4
mod1 = arima(serie1, order = c(1,0,1)) # Model choosed by me
arch.test(mod1) # there is heteroscedaticity in order <=4
generics::forecast(mod1) %>%
autoplot()
generics::forecast(mod1_r)%>%
autoplot()
library(ipeadatar)
ipea_series <- ipeadatar::available_series()
pib <- ipeadatar::ipeadata('SCN104_PIBPM104') %>%
dplyr::filter(lubridate::year(date) > 2003) %>%
dplyr::select(pib = value) %>%
ts(start = 2004,frequency = 4)
ipca <- ipeadatar::ipeadata('PRECOS12_IPCA12') %>%
dplyr::filter(lubridate::year(date) > 2003) %>%
dplyr::select(ipca = value) %>%
ts(start = 2004,frequency = 12)
plot(pib);
plot(ipca)
ipca <- ipeadatar::ipeadata('PRECOS12_IPCA12') %>%
dplyr::filter(lubridate::year(date) > 1995
ipca <- ipeadatar::ipeadata('PRECOS12_IPCA12') %>%
pib <- ipeadatar::ipeadata('SCN104_PIBPM104') %>%
dplyr::filter(lubridate::year(date) > 1995) %>%
dplyr::select(pib = value) %>%
ts(start = 1995,frequency = 4)
ipca <- ipeadatar::ipeadata('PRECOS12_IPCA12') %>%
dplyr::filter(lubridate::year(date) > 1995) %>%
dplyr::select(ipca = value) %>%
ts(start = 1995,frequency = 12)
plot(pib);
plot(ipca)
pib_no_trend = pib %>% diff()
pib_no_trend %>% plot
pib_no_trend
ipca
ipca_no_trend = ipca %>% diff()
ipca_no_trend %>% plot
ipca
ipca
pib_no_trend = pib
pib_no_trend %>% plot
ipca_no_trend = ipca
ipca_no_trend %>% plot
# Remove covid ------------------------------------------------------------
# create a vector of dates
datas_pib <- seq(as.Date("2004-05-01"), as.Date("2024-12-01"), by = "quarter")
datas_ipca <- seq(as.Date("2004-02-01"), as.Date("2025-02-01"), by = "month")
# Variable to critical months
mes_critico <- ifelse(format(datas_pib, "%Y-%m") %in% c(
"2020-05", "2020-06", "2020-07",  # 1ª onda
"2021-03", "2021-04", "2021-05",  # 2ª onda
"2022-01", "2022-02"              # 3ª onda (Ômicron)
), 1, 0)
mes_critico_ipca <- ifelse(format(datas_ipca, "%Y-%m") %in% c(
"2020-05", "2020-06", "2020-07",  # 1ª onda
"2021-03", "2021-04", "2021-05",  # 2ª onda
"2022-01", "2022-02"              # 3ª onda (Ômicron)
), 1, 0)
df_covid_pib = dplyr::tibble(datas_pib, mes_critico) %>%
dplyr::select(-datas_pib) %>%
ts(start = 2004,frequency = 4)
df_covid_ipca = dplyr::tibble(datas_ipca, mes_critico = mes_critico_ipca)%>%
dplyr::select(-datas_ipca) %>%
ts(start = 2004,frequency = 12)
tsdisplay(pib_no_trend) # AR(1)
tsdisplay(ipca_no_trend) # AR(1)
mod1 = arima(pib_no_trend, order = c(1,0,0)) # Model choosed by me
