1 + 1
1 + 1
1 + 1
## 1.1 Load dataset
df <- as.data.table(read_excel(file.path(general_path, "Homework", "Homework4", "data_vec_alunos.xls")))
# Load user-specific paths and settings from config file
source("config.R")  # defines base_path, data_clean_dir, etc.
## 1.1 Load dataset
df <- as.data.table(read_excel(file.path(general_path, "Homework", "Homework4", "data_vec_alunos.xls")))
View(df)
df.info()
df.describe
df.describe()
summary(df)
# Create log of ethanol price
df[, l_Pa := log(Petanol)]
# Estimate long-term relationship (Engle-Granger)
reg_eg <- lm(l_Cg ~ l_Y + l_Pg + l_Pa, data = df)
summary(reg_eg)
# Estimate long-run relationship
reg_eg <- lm(l_Cg ~ l_Y + l_Pg + l_Pa, data = df)
names(df)
## 1.1 Load dataset
df <- as.data.table(read_excel(file.path(general_path, "Homework", "Homework4", "data_vec_alunos.xls")))
# Load user-specific paths and settings from config file
source("config.R")  # defines base_path, data_clean_dir, etc.
## 1.1 Load dataset
df <- as.data.table(read_excel(file.path(general_path, "Homework", "Homework4", "data_vec_alunos.xls")))
summary(df)
names(df)
# Log-transforming the relevant variables
df[, l_consumption := log(Cgasolina)]
df[, l_income := log(PIB_cap)]
df[, l_price_gas := log(Pgasolina)]
df[, l_price_eth := log(Petanol)]
summary(df)
# Reshape the data for plotting
melted_df <- melt(df[, .(Ano, l_consumption, l_income, l_price_gas, l_price_eth)], id.vars = "Ano")
# Plot
ggplot(melted_df, aes(x = Ano, y = value, color = variable)) +
geom_line() +
labs(title = "Log-transformed series", x = "Year", y = "Log value")
library(urca)
# ADF test on log levels
summary(ur.df(df$l_consumption, type = "trend", selectlags = "AIC"))
summary(ur.df(df$l_income, type = "trend", selectlags = "AIC"))
summary(ur.df(df$l_price_gas, type = "trend", selectlags = "AIC"))
summary(ur.df(df$l_price_eth, type = "trend", selectlags = "AIC"))
# If not stationary, test first differences
df[, d_consumption := diff(l_consumption)]
df[, d_income := diff(l_income)]
library(urca)
# ADF test on log levels
summary(ur.df(df$l_consumption, type = "trend", selectlags = "AIC"))
summary(ur.df(df$l_income, type = "trend", selectlags = "AIC"))
summary(ur.df(df$l_price_gas, type = "trend", selectlags = "AIC"))
summary(ur.df(df$l_price_eth, type = "trend", selectlags = "AIC"))
# If not stationary, test first differences
df[, d_consumption := diff(l_consumption)]
## 1.1 Load dataset
df <- as.data.table(read_excel(file.path(general_path, "Homework", "Homework4", "data_vec_alunos.xls")))
View(df)
library(urca)
# Test for unit root (level with trend)
summary(ur.df(df$l_consumption, type = "trend", selectlags = "AIC"))
## 1.1 Load dataset
df <- as.data.table(read_excel(file.path(general_path, "Homework", "Homework4", "data_vec_alunos.xls")))
# Log-transforming the relevant variables
df[, l_consumption := log(Cgasolina)]
df[, l_income := log(PIB_cap)]
df[, l_price_gas := log(Pgasolina)]
# Load user-specific paths and settings from config file
source("config.R")  # defines base_path, data_clean_dir, etc.
## 1.1 Load dataset
df <- as.data.table(read_excel(file.path(general_path, "Homework", "Homework4", "data_vec_alunos.xls")))
# Log-transforming the relevant variables
df[, l_consumption := log(Cgasolina)]
df[, l_income := log(PIB_cap)]
df[, l_price_gas := log(Pgasolina)]
df[, l_price_eth := log(Petanol)]
summary(df)
# Drop intermediate variables
df[, c("Cgasolina", "PIB_cap", "Pgasolina", "Petanol") := NULL]
summary(df)
# Test for unit root (level with trend)
summary(ur.df(df$l_consumption, type = "trend", selectlags = "AIC"))
# Test for unit root (level with trend)
summary(ur.df(df$l_consumption, type = "trend", selectlags = "AIC"))
summary(ur.df(df$l_income, type = "trend", selectlags = "AIC"))
summary(ur.df(df$l_price_gas, type = "trend", selectlags = "AIC"))
summary(ur.df(df$l_price_eth, type = "trend", selectlags = "AIC"))
# Test for unit root
summary(ur.df(df$l_consumption, type = "trend", selectlags = "AIC"))
summary(ur.df(df$l_income, type = "trend", selectlags = "AIC"))
summary(ur.df(df$l_price_gas, type = "trend", selectlags = "AIC"))
summary(ur.df(df$l_price_eth, type = "trend", selectlags = "AIC"))
# Step 2: Estimate long-run relationship via OLS
long_run_model <- lm(l_consumption ~ l_income + l_price_gas + l_price_eth, data = df)
summary(long_run_model)
##
df[, residuals := resid(long_run_model)]
## XXX
summary(ur.df(df$residuals, type = "none", selectlags = "AIC"))
# Now we
df[, dl_consumption := c(NA, diff(l_consumption))]
df[, dl_income := c(NA, diff(l_income))]
df[, dl_price_gas := c(NA, diff(l_price_gas))]
df[, dl_price_eth := c(NA, diff(l_price_eth))]
# XXX
df[, residuals_lag := shift(residuals, 1)]
# ECM: mudança no consumo de gasolina explicada pelo erro de longo prazo defasado + variações das variáveis explicativas
ecm_model <- lm(dl_consumption ~ residuals_lag +
dl_income + dl_price_gas + dl_price_eth,
data = df)
summary(ecm_model)
# Load user-specific paths and settings from config file
source("config.R")  # defines base_path, data_clean_dir, etc.
---
---
title: "Homework 4 – Cointegration and VEC Models"
# Load user-specific paths and settings from config file
source("config.R")  # defines base_path, data_clean_dir, etc.
# Load user-specific paths and settings from config file
source("config.R")  # defines path, packages, etc.
#| echo: false
2 * 2
# Step 1: Test for unit roots in log-level series (ADF test with trend)
summary(ur.df(df$l_consumption, type = "trend", selectlags = "AIC"))
# Load user-specific paths and settings from config file
source("config.R")  # defines path, packages, etc.
# Load user-specific paths and settings from config file
source("config.R")  # defines path, packages, etc.
## 1.1 Load dataset
df <- as.data.table(read_excel(file.path(general_path, "Homework", "Homework4", "data_vec_alunos.xls")))
# Log-transforming the relevant variables
df[, l_consumption := log(Cgasolina)]
df[, l_income := log(PIB_cap)]
df[, l_price_gas := log(Pgasolina)]
df[, l_price_eth := log(Petanol)]
# Drop intermediate variables
df[, c("Cgasolina", "PIB_cap", "Pgasolina", "Petanol") := NULL]
summary(df)
# Step 1: Test for unit roots in log-level series (ADF test with trend)
summary(ur.df(df$l_consumption, type = "trend", selectlags = "AIC"))
summary(ur.df(df$l_income, type = "trend", selectlags = "AIC"))
summary(ur.df(df$l_price_gas, type = "trend", selectlags = "AIC"))
summary(ur.df(df$l_price_eth, type = "trend", selectlags = "AIC"))
## Graphs
# Plot log-transformed consumption
ggplot(df, aes(x = date, y = l_consumption)) +
geom_line(color = "blue") +
labs(title = "Log-transformed Gasoline Consumption", x = "Date", y = "Log(Consumption)")
## Graphs
# Plot log-transformed consumption
ggplot(df, aes(x = Ano, y = l_consumption)) +
geom_line(color = "blue") +
labs(title = "Log-transformed Gasoline Consumption", x = "Date", y = "Log(Consumption)")
# Plot log-transformed income
ggplot(df, aes(x = Ano, y = l_income)) +
geom_line(color = "green") +
labs(title = "Log-transformed Income", x = "Date", y = "Log(Income)")
# Plot log-transformed gasoline price
ggplot(df, aes(x = Ano, y = l_price_gas)) +
geom_line(color = "red") +
labs(title = "Log-transformed Gasoline Price", x = "Date", y = "Log(Gasoline Price)")
# Plot log-transformed ethanol price
ggplot(df, aes(x = Ano, y = l_price_eth)) +
geom_line(color = "purple") +
labs(title = "Log-transformed Ethanol Price", x = "Date", y = "Log(Ethanol Price)")
# Load user-specific paths and settings from config file
source("config.R")  # defines path, packages, etc.
# Load user-specific paths and settings from config file
source("config.R")  # defines path, packages, etc.
## 1.1 Load dataset
df <- as.data.table(read_excel(file.path(general_path, "Homework", "Homework4", "data_vec_alunos.xls")))
# Log-transforming the relevant variables
df[, l_consumption := log(Cgasolina)]
df[, l_income := log(PIB_cap)]
df[, l_price_gas := log(Pgasolina)]
df[, l_price_eth := log(Petanol)]
# Drop intermediate variables
df[, c("Cgasolina", "PIB_cap", "Pgasolina", "Petanol") := NULL]
summary(df)
## Graphs
ggplot(df, aes(x = date, y = l_consumption)) +
geom_line(color = red_color, size = 1) +  # Apply custom line color
labs(title = "Log-transformed Gasoline Consumption", x = "Date", y = "Log(Consumption)") +
theme_minimal() +  # Removes gray background
theme(
panel.grid.major = element_line(color = "gray90"),  # Soft major grid lines
panel.grid.minor = element_line(color = "gray95"),  # Softer minor grid lines
panel.background = element_rect(fill = "white"),  # White background
plot.title = element_text(hjust = 0.5, size = 14, face = "bold")  # Centered title
)
red_color <- rgb(162 / 255, 37 / 255, 56 / 255)
## Graphs
ggplot(df, aes(x = date, y = l_consumption)) +
geom_line(color = red_color, size = 1) +  # Apply custom line color
labs(title = "Log-transformed Gasoline Consumption", x = "Date", y = "Log(Consumption)") +
theme_minimal() +  # Removes gray background
theme(
panel.grid.major = element_line(color = "gray90"),  # Soft major grid lines
panel.grid.minor = element_line(color = "gray95"),  # Softer minor grid lines
panel.background = element_rect(fill = "white"),  # White background
plot.title = element_text(hjust = 0.5, size = 14, face = "bold")  # Centered title
)
View(df)
# Load user-specific paths and settings from config file
source("config.R")  # defines path, packages, etc.
## 1.1 Load dataset
df <- as.data.table(read_excel(file.path(general_path, "Homework", "Homework4", "data_vec_alunos.xls")))
# Log-transforming the relevant variables
df[, l_consumption := log(Cgasolina)]
df[, l_income := log(PIB_cap)]
df[, l_price_gas := log(Pgasolina)]
df[, l_price_eth := log(Petanol)]
# Drop intermediate variables
df[, c("Cgasolina", "PIB_cap", "Pgasolina", "Petanol") := NULL]
summary(df)
## Graphs
ggplot(df, aes(x = Ano, y = l_consumption)) +
geom_line(color = red_color, size = 1) +  # Apply custom line color
labs(title = "Log-transformed Gasoline Consumption", x = "Date", y = "Log(Consumption)") +
theme_minimal() +  # Removes gray background
theme(
panel.grid.major = element_line(color = "gray90"),  # Soft major grid lines
panel.grid.minor = element_line(color = "gray95"),  # Softer minor grid lines
panel.background = element_rect(fill = "white"),  # White background
plot.title = element_text(hjust = 0.5, size = 14, face = "bold")  # Centered title
)
## Graphs
# List of variables to plot
vars_to_plot <- c("l_consumption", "l_income", "l_price_gas", "l_price_eth")
# Generate plots using a loop
for (var in vars_to_plot) {
p <- ggplot(df, aes(x = date, y = get(var))) +
geom_line(color = red_color, size = 1) +  # Apply custom line color
labs(title = paste("Log-transformed", var), x = "Date", y = paste("Log(", var, ")", sep = "")) +
theme_minimal() +  # Removes gray background
theme(
panel.grid.major = element_line(color = "gray90"),  # Soft major grid lines
panel.grid.minor = element_line(color = "gray95"),  # Softer minor grid lines
panel.background = element_rect(fill = "white"),  # White background
plot.title = element_text(hjust = 0.5, size = 14, face = "bold")  # Centered title
)
print(p)  # Display the plot
}
## Graphs
# List of variables to plot
vars_to_plot <- c("l_consumption", "l_income", "l_price_gas", "l_price_eth")
# Generate plots using a loop
for (var in vars_to_plot) {
p <- ggplot(df, aes(x = Ano, y = get(var))) +
geom_line(color = red_color, size = 1) +  # Apply custom line color
labs(title = paste("Log-transformed", var), x = "Date", y = paste("Log(", var, ")", sep = "")) +
theme_minimal() +  # Removes gray background
theme(
panel.grid.major = element_line(color = "gray90"),  # Soft major grid lines
panel.grid.minor = element_line(color = "gray95"),  # Softer minor grid lines
panel.background = element_rect(fill = "white"),  # White background
plot.title = element_text(hjust = 0.5, size = 14, face = "bold")  # Centered title
)
print(p)  # Display the plot
}
# Step 1: Test for unit roots in log-level series (ADF test with trend)
summary(ur.df(df$l_consumption, type = "trend", selectlags = "AIC"))
summary(ur.df(df$l_income, type = "trend", selectlags = "AIC"))
summary(ur.df(df$l_price_gas, type = "trend", selectlags = "AIC"))
summary(ur.df(df$l_price_eth, type = "trend", selectlags = "AIC"))
